{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nconst ActiveLink = (_ref) => {\n  let {\n    router,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  const child = Children.only(children);\n  let className = child.props.className || '';\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = `${className} ${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n  return __jsx(Link, props, React.cloneElement(child, {\n    className\n  }));\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["C:/Users/promi_4nj2vsn/OneDrive/Desktop/DCCAJS/utils/ActiveLink.js"],"names":["withRouter","Link","React","Children","ActiveLink","router","children","props","child","only","className","pathname","href","activeClassName","trim","cloneElement"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AAAA,MAAZC,KAAY;;AACnD,QAAMC,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcH,QAAd,CAAd;AAEA,MAAII,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC;;AACA,MAAIL,MAAM,CAACM,QAAP,KAAoBJ,KAAK,CAACK,IAA1B,IAAkCL,KAAK,CAACM,eAA5C,EAA6D;AACzDH,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGH,KAAK,CAACM,eAAgB,EAAtC,CAAwCC,IAAxC,EAAZ;AACH;;AAED,SAAOP,KAAK,CAACM,eAAb;AAEA,SAAO,MAAC,IAAD,EAAUN,KAAV,EAAkBL,KAAK,CAACa,YAAN,CAAmBP,KAAnB,EAA0B;AAAEE,IAAAA;AAAF,GAA1B,CAAlB,CAAP;AACH,CAXD;;AAaA,eAAeV,UAAU,CAACI,UAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport React, { Children } from 'react';\r\n\r\nconst ActiveLink = ({ router, children, ...props }) => {\r\n    const child = Children.only(children);\r\n\r\n    let className = child.props.className || '';\r\n    if (router.pathname === props.href && props.activeClassName) {\r\n        className = `${className} ${props.activeClassName}`.trim();\r\n    }\r\n\r\n    delete props.activeClassName;\r\n\r\n    return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\r\n};\r\n\r\nexport default withRouter(ActiveLink);"]},"metadata":{},"sourceType":"module"}